---
title: "Como usar quarto"
author: "Jamil"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1

```


```{r}
#| echo: false
2 * 2

```



The `echo: false` option disables the printing of code (only output is displayed).
# ¿Cómo usar Quarto?
## fuentes
- Negrita: *esto es fuente negrita*
- Cursiva: Solanum tuberosum

## Fórmulas matemáticas
Este es el Área del círculo$$Area_{círculo}=pi\cdot r^2$$


Esta es una fórmula cualquiera $$\frac{\left(2x-1\right)^2-1}{4}=k$$

# Para realizar el proyecto debo
1. Tener mi proyecto
1. Conectar mi proyecto a GithUb
1. Tener un archivo en formato html llamado  `index.html`
1. Hacer push al repositorio
1. Activar Github pages


# modelos lineales

```{r}
source('https://inkaverse.com/setup.r')

url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"

gs <- url %>% 
  as_sheets_id()

fb <- gs %>% 
  range_read("fb")

str(fb)
```

## modelo lineal lfa

```{r}
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
              , data = fb)

anova(modelo)

plot(modelo)
```

## boxplot

```{r}
ggplot(fb, aes(x = geno, y = lfa, fill = riego)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 3) +
  theme_minimal() +
  labs(title = "Boxplot de Niveles de Riego y Genotipos",
       x = "Genotipo", y = "area foliar (cm^2)") +
  theme(legend.position = "top") 
```

##modelo lineal hi

```{r}
modelo <- aov(formula = hi ~ bloque + riego + geno + riego*geno
              , data = fb)

anova(modelo)

plot(modelo)
```

## modelos mixtos: lfa

```{r}
library(lme4)


model <- lme4::lmer(lfa ~ riego + geno + riego*geno + (1|bloque)
              , data = fb)

anova(model)

plot(model)

ol <- boxplot(lfa ~ riego*geno, fb)
ol
```

```{r}
library(inti)

model <- remove_outliers(data = fb 
                         , formula = lfa ~ riego + geno + riego*geno + (1|bloque)
                         , plot_diag = T)

model
```

# comparacion de medias 

```{r}
modelo <- lm(formula = hi ~ bloque + riego + geno + riego*geno
              , data = fb)

anova(modelo)

library(agricolae)

tukey_result <- HSD.test(modelo
                         , c("geno", "riego")
                         , group = TRUE)

print(tukey_result)

plot(tukey_result)

str(tukey_result)

grupos <- tukey_result$groups %>% 
  rownames_to_column("tratamientos") %>% 
  separate(tratamientos, into = c("geno", "riego")
           , sep = ":")

str(grupos)

```

```{r}
ggplot(fb, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(title = "Gráfico de Barras: LFA por Genotipo y Riego",
       x = "Genotipo", y = "LFA") +
  theme_minimal() +
  theme(legend.position = "top")
```



#analisis multivariado 
```{r}
str(fb)
```

## correlacion

```{r}
library(psych)
fb %>% 
  select_if(is.numeric) %>% 
  dplyr::select(!c("block")) %>% 
  pairs.panels(x =
                 ,hist.col="red"
               ,pch = 21
               ,stars= TRUE
               ,SCALE= FALSE
               ,lm = TRUE
               )
```


## PCA: analisis de componentes principales 

```{r}
library(FactoMineR)

mv <- fb %>% 
  group_by(riego, geno) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>% 
  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)


p1 <- plot(mv
     , choix="ind"
     , habillage=1
     , label = "ind"
     )


p2 <- plot(mv
     , choix="var")

list(p1, p2) %>% 
  plot_grid(plotlist = ., nrow = 1)
```


#graficos en ggplot2
##data cruda
### boxplot

```{r}
p1 <- fb %>% 
  ggplot(data = ., aes(x = geno, y = hi, fill = riego)) +
   geom_boxplot() +
  labs(x = "Genotipos"
       , y = "Indice de cosecha"
       , fill = "Tratamiento" 
       , title ="Eficiencia de uso de agua en papa"
       , subtitle = "Indice de cosecha"
       , caption = "n = 150", 
       ) +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5))

p1
```
## scater plot

```{r}
p2 <- fb %>% 
  ggplot(data = .
         , aes(x = twue, y = hi, color = riego)) +
  geom_point() +
  geom_smooth(method = lm) +
    labs(x = "Efiencia de uso de agua de tuberculo"
       , y = "Indice de cosecha"
       , color = "Tratamiento" 
       , title ="Eficiencia de uso de agua en papa"
       , subtitle = "Indice de cosecha vs Efiencia de uso de agua de tuberculo"
       , caption = "n = 150", 
       ) +
  theme_bw()

p2
```

## datos resumidos

```{r}
modelo <- lm(lfa ~  bloque + riego*geno
          , data = fb)

anova(modelo)
## Analysis of Variance Table
## 
## Response: lfa
##             Df    Sum Sq   Mean Sq   F value              Pr(>F)    
## bloque       4   3435339    858835    1.5616              0.1892    
## riego        1 788556926 788556926 1433.7957 <0.0000000000000002 ***
## geno        14 261729564  18694969   33.9922 <0.0000000000000002 ***
## riego:geno  14 108147972   7724855   14.0457 <0.0000000000000002 ***
## Residuals  116  63797516    549979                                  
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

library(agricolae)

tukey <- HSD.test(modelo
                  , c("geno", "riego")
                  , group = TRUE)

grupos <- tukey_result$groups %>% 
  rownames_to_column("tratamientos") %>% 
  separate(tratamientos, into = c("geno", "riego")
           , sep = ":")
```


str(datos)
















